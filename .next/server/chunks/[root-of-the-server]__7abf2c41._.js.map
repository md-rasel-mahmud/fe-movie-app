{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///Users/macair/work/my-projects/fe-movie-app/src/enums/providers.enum.ts"],"sourcesContent":["export enum ProvidersEnum {\n  GOOGLE = 'GOOGLE',\n  CREDENTIAL = 'CREDENTIAL',\n}\n"],"names":[],"mappings":";;;AAAO,IAAA,AAAK,uCAAA;;;WAAA","debugId":null}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":["file:///Users/macair/work/my-projects/fe-movie-app/src/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["import { ProvidersEnum } from \"@/enums/providers.enum\";\nimport NextAuth from \"next-auth\";\nimport GoogleProvider from \"next-auth/providers/google\";\n\nconst handler = NextAuth({\n  providers: [\n    GoogleProvider({\n      clientId: process.env.NEXT_APP_GOOGLE_AUTH_CLIENT_ID!,\n      clientSecret: process.env.NEXT_APP_GOOGLE_AUTH_CLIENT_SECRET!,\n    }),\n  ],\n  callbacks: {\n    async signIn({ user }) {\n      try {\n        const res = await fetch(\n          `${process.env.NEXT_APP_BACKEND_API_URL}/api/v1/auth/signup`,\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              name: user.name,\n              email: user.email,\n              image: user.image,\n              provider: ProvidersEnum.GOOGLE,\n            }),\n          }\n        );\n\n        const data = await res.json();\n\n        if (data.code === 409) {\n          console.log(\"User already exists\");\n          return true;\n        }\n\n        if (!res.ok) {\n          console.error(\"Backend error:\", await res.text());\n          return false;\n        }\n\n        return true;\n      } catch (error) {\n        console.error(\"Google SignIn error:\", error);\n        return false;\n      }\n    },\n  },\n  secret: process.env.NEXTAUTH_SECRET,\n});\n\nexport { handler as GET, handler as POST };\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEA,MAAM,UAAU,CAAA,GAAA,uIAAA,CAAA,UAAQ,AAAD,EAAE;IACvB,WAAW;QACT,CAAA,GAAA,qJAAA,CAAA,UAAc,AAAD,EAAE;YACb,UAAU,QAAQ,GAAG,CAAC,8BAA8B;YACpD,cAAc,QAAQ,GAAG,CAAC,kCAAkC;QAC9D;KACD;IACD,WAAW;QACT,MAAM,QAAO,EAAE,IAAI,EAAE;YACnB,IAAI;gBACF,MAAM,MAAM,MAAM,MAChB,GAAG,QAAQ,GAAG,CAAC,wBAAwB,CAAC,mBAAmB,CAAC,EAC5D;oBACE,QAAQ;oBACR,SAAS;wBACP,gBAAgB;oBAClB;oBACA,MAAM,KAAK,SAAS,CAAC;wBACnB,MAAM,KAAK,IAAI;wBACf,OAAO,KAAK,KAAK;wBACjB,OAAO,KAAK,KAAK;wBACjB,UAAU,mIAAA,CAAA,gBAAa,CAAC,MAAM;oBAChC;gBACF;gBAGF,MAAM,OAAO,MAAM,IAAI,IAAI;gBAE3B,IAAI,KAAK,IAAI,KAAK,KAAK;oBACrB,QAAQ,GAAG,CAAC;oBACZ,OAAO;gBACT;gBAEA,IAAI,CAAC,IAAI,EAAE,EAAE;oBACX,QAAQ,KAAK,CAAC,kBAAkB,MAAM,IAAI,IAAI;oBAC9C,OAAO;gBACT;gBAEA,OAAO;YACT,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,wBAAwB;gBACtC,OAAO;YACT;QACF;IACF;IACA,QAAQ,QAAQ,GAAG,CAAC,eAAe;AACrC","debugId":null}}]
}